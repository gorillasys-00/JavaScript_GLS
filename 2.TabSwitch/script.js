$(function () {

  // 初期状態：最初のタブと、そのタブに対応するコンテンツをアクティブにする
  // 最初のタブを取得


  // 最初のタブに「active」クラスをつけて選ばれた状態にする


  // タブに設定されたdata-tab属性の値を取得（例: "content1"）


  // IDが一致するコンテンツに「active」クラスをつけて表示する


  // ▼ここで「イベント委譲」を使ってタブのクリックを監視します
  //
  // 普通なら「$('.tab').on('click', function () {...})」と書きますが、
  // この方法だと、あとから追加されたタブに対応できません。
  //
  // そこで「.tabs」という親要素に対してイベントを設定し、
  // その中の「.tab」がクリックされた時だけ処理を行うようにします。
  //
  // この書き方を「イベント委譲（event delegation）」と呼びます。


    // すべてのタブの「active」クラスを外す


    // クリックされたタブに「active」クラスをつける


    // 対応するコンテンツを表示するために、まずすべてのコンテンツの「active」を外す


    // クリックされたタブのdata-tab属性から、表示するコンテンツのIDを取得
    // 対応するIDのコンテンツに「active」クラスをつける




});


